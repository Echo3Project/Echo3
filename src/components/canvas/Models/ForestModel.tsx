/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.2 ./merged-transformed.glb -t --transform
*/

import { useGLTF } from '@react-three/drei';
import { ReactElement } from 'react';
import { Mesh, MeshStandardMaterial } from 'three';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
    nodes: {
        Floor_Grass_0_1: Mesh;
        Floor_Grass_0_2: Mesh;
        Floor_Grass_0_3: Mesh;
        Floor_Grass_0_4: Mesh;
        Floor_Grass_0_5: Mesh;
        Floor_Grass_0_6: Mesh;
        Floor_Grass_0_7: Mesh;
        Floor_Grass_0_8: Mesh;
        Floor_Grass_0_9: Mesh;
        Floor_Grass_0_10: Mesh;
        Floor_Grass_0_11: Mesh;
        Floor_Grass_0_12: Mesh;
        Floor_Grass_0_13: Mesh;
        Floor_Grass_0_14: Mesh;
        Floor_Grass_0_15: Mesh;
        Floor_Grass_0_16: Mesh;
        Floor_Grass_0_17: Mesh;
        Floor_Grass_0_18: Mesh;
        Floor_Grass_0_19: Mesh;
        Floor_Grass_0_20: Mesh;
        Floor_Grass_0_21: Mesh;
        Floor_Grass_0_22: Mesh;
        Floor_Grass_0_23: Mesh;
    };
    materials: {
        Grass: MeshStandardMaterial;
        ['WoodStump.1.001']: MeshStandardMaterial;
        Wood_Stumpf: MeshStandardMaterial;
        ['WoodStump.1']: MeshStandardMaterial;
        ['Wood_Stump.2']: MeshStandardMaterial;
        ['Metal.2']: MeshStandardMaterial;
        ['Metal.1']: MeshStandardMaterial;
        Bltter: MeshStandardMaterial;
        Tiles_light: MeshStandardMaterial;
        Tiles_dark: MeshStandardMaterial;
        Tiles: MeshStandardMaterial;
        Rope: MeshStandardMaterial;
        Stone_greyish: MeshStandardMaterial;
        Stone_darkish: MeshStandardMaterial;
        Stone_redish: MeshStandardMaterial;
        Bltter_hell: MeshStandardMaterial;
        Bltter_heller: MeshStandardMaterial;
        Stairs: MeshStandardMaterial;
        House: MeshStandardMaterial;
        Roofbox: MeshStandardMaterial;
        Magma: MeshStandardMaterial;
        DarkEarth: MeshStandardMaterial;
        Earth: MeshStandardMaterial;
    };
};

export function ForestModel(
    props: JSX.IntrinsicElements['group'],
): ReactElement {
    const { nodes, materials } = useGLTF('/models/forest.glb') as GLTFResult;
    return (
        <group {...props} dispose={null}>
            <group rotation={[-Math.PI / 2, 0, 0]} scale={10}>
                <mesh
                    geometry={nodes.Floor_Grass_0_1.geometry}
                    material={materials.Grass}
                />
                <mesh
                    geometry={nodes.Floor_Grass_0_2.geometry}
                    material={materials['WoodStump.1.001']}
                />
                <mesh
                    geometry={nodes.Floor_Grass_0_3.geometry}
                    material={materials.Wood_Stumpf}
                />
                <mesh
                    geometry={nodes.Floor_Grass_0_4.geometry}
                    material={materials['WoodStump.1']}
                />
                <mesh
                    geometry={nodes.Floor_Grass_0_5.geometry}
                    material={materials['Wood_Stump.2']}
                />
                <mesh
                    geometry={nodes.Floor_Grass_0_6.geometry}
                    material={materials['Metal.2']}
                />
                <mesh
                    geometry={nodes.Floor_Grass_0_7.geometry}
                    material={materials['Metal.1']}
                />
                <mesh
                    geometry={nodes.Floor_Grass_0_8.geometry}
                    material={materials.Bltter}
                />
                <mesh
                    geometry={nodes.Floor_Grass_0_9.geometry}
                    material={materials.Tiles_light}
                />
                <mesh
                    geometry={nodes.Floor_Grass_0_10.geometry}
                    material={materials.Tiles_dark}
                />
                <mesh
                    geometry={nodes.Floor_Grass_0_11.geometry}
                    material={materials.Tiles}
                />
                <mesh
                    geometry={nodes.Floor_Grass_0_12.geometry}
                    material={materials.Rope}
                />
                <mesh
                    geometry={nodes.Floor_Grass_0_13.geometry}
                    material={materials.Stone_greyish}
                />
                <mesh
                    geometry={nodes.Floor_Grass_0_14.geometry}
                    material={materials.Stone_darkish}
                />
                <mesh
                    geometry={nodes.Floor_Grass_0_15.geometry}
                    material={materials.Stone_redish}
                />
                <mesh
                    geometry={nodes.Floor_Grass_0_16.geometry}
                    material={materials.Bltter_hell}
                />
                <mesh
                    geometry={nodes.Floor_Grass_0_17.geometry}
                    material={materials.Bltter_heller}
                />
                <mesh
                    geometry={nodes.Floor_Grass_0_18.geometry}
                    material={materials.Stairs}
                />
                <mesh
                    geometry={nodes.Floor_Grass_0_19.geometry}
                    material={materials.House}
                />
                <mesh
                    geometry={nodes.Floor_Grass_0_20.geometry}
                    material={materials.Roofbox}
                />
                <mesh
                    geometry={nodes.Floor_Grass_0_21.geometry}
                    material={materials.Magma}
                />
                <mesh
                    geometry={nodes.Floor_Grass_0_22.geometry}
                    material={materials.DarkEarth}
                />
                <mesh
                    geometry={nodes.Floor_Grass_0_23.geometry}
                    material={materials.Earth}
                />
            </group>
        </group>
    );
}

useGLTF.preload('/models/forest.glb');
