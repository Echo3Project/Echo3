/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 ./hubbl.gltf -T -t
*/

import { useGLTF } from '@react-three/drei';
import { ReactElement } from 'react';
import { Mesh, MeshStandardMaterial } from 'three';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
    nodes: {
        trèfles: Mesh;
        Sol: Mesh;
        anneaux003: Mesh;
        Sphere001: Mesh;
    };
    materials: {
        Trèfles: MeshStandardMaterial;
        ['Sol forêt']: MeshStandardMaterial;
        Material: MeshStandardMaterial;
    };
};

export function Model(props: JSX.IntrinsicElements['group']): ReactElement {
    const { nodes, materials } = useGLTF(
        '/models/hubbl-transformed.glb',
    ) as unknown as GLTFResult;
    return (
        <group {...props} dispose={null}>
            <mesh
                geometry={nodes.trèfles.geometry}
                material={materials.Trèfles}
                position={[0, 0.579, 0]}
                scale={[10, -8.02, 10]}
            />
            {/* <mesh geometry={nodes.Sol.geometry} material={materials['Sol forêt']} position={[0, 0.572, 0]} scale={[-12.104, -8.02, -10.418]} /> */}
            <mesh
                geometry={nodes.anneaux003.geometry}
                material={materials.Material}
                position={[-0.325, 8.789, 1.064]}
                rotation={[-0.095, -0.022, 0.221]}
                scale={[5.871, 0.39, 6.055]}
            />
            <mesh
                geometry={nodes.Sphere001.geometry}
                material={materials.Material}
            />
        </group>
    );
}

useGLTF.preload('/models/hubbl-transformed.glb');
